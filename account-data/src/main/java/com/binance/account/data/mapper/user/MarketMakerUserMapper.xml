<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.account.data.mapper.user.MarketMakerUserMapper">
  <resultMap id="BaseResultMap" type="com.binance.account.data.entity.user.MarketMakerUser">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, email, remark, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from market_maker_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from market_maker_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.binance.account.data.entity.user.MarketMakerUser">
    insert into market_maker_user (user_id, email, remark,
      create_time)
    values (#{userId,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.binance.account.data.entity.user.MarketMakerUser">
    insert into market_maker_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.binance.account.data.entity.user.MarketMakerUser">
    update market_maker_user
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binance.account.data.entity.user.MarketMakerUser">
    update market_maker_user
    set email = #{email,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <select id="selectDynamic" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from market_maker_user
    <where>
      <if test="userId != null">
        AND user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="email != null">
        AND email = #{email,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
</mapper>
