<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.account.data.mapper.security.UserIpChangeMapper">
	<resultMap id="BaseResultMap" type="com.binance.account.data.entity.security.UserIpChange">
		<id column="id" jdbcType="CHAR" property="id" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="ip" jdbcType="VARCHAR" property="ip" />
		<result column="status" jdbcType="BIT" property="status" />
		<result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, ip, status, insert_time, update_time
	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_ip_change
        where id = #{id,jdbcType=CHAR}
        <if test="userId != null">
            and user_id = #{userId,jdbcType=BIGINT}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user_ip_change
		where id = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.binance.account.data.entity.security.UserIpChange">
		insert into user_ip_change (id, user_id, ip, status,
		insert_time, update_time)
		values (#{id,jdbcType=CHAR}, #{userId,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
		#{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertIgnore" parameterType="com.binance.account.data.entity.security.UserIpChange">
		insert ignore into user_ip_change (id, user_id, ip, status,
		insert_time, update_time)
		values (#{id,jdbcType=CHAR}, #{userId,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
		#{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.binance.account.data.entity.security.UserIpChange">
		insert into user_ip_change
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="ip != null">
				ip,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="insertTime != null">
				insert_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="ip != null">
				#{ip,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIT},
			</if>
			<if test="insertTime != null">
				#{insertTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.binance.account.data.entity.security.UserIpChange">
		update user_ip_change
		<set>
			<if test="ip != null">
				ip = #{ip,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="insertTime != null">
				insert_time = #{insertTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=CHAR} and user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.binance.account.data.entity.security.UserIpChange">
		update user_ip_change
		set user_id = #{userId,jdbcType=BIGINT},
		ip = #{ip,jdbcType=VARCHAR},
		status = #{status,jdbcType=BIT},
		insert_time = #{insertTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=CHAR}
	</update>

	<select id="selectByUserIdAndIp" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_ip_change
		where user_id = #{userId,jdbcType=BIGINT}
		and ip = #{ip,jdbcType=VARCHAR}
	</select>
</mapper>