<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.account.data.mapper.broker.BrokerCommissionUpdateBakMapper">
  <resultMap id="BaseResultMap" type="com.binance.account.data.entity.broker.BrokerCommissionUpdateBak">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="trading_account" jdbcType="BIGINT" property="tradingAccount" />
    <result column="maker_commiss" jdbcType="DECIMAL" property="makerCommiss" />
    <result column="taker_commiss" jdbcType="DECIMAL" property="takerCommiss" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, trading_account, maker_commiss, taker_commiss, symbol, source, insert_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from broker_commission_update_bak
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="countAllBak" resultType="java.lang.Long">
    select
    count(1)
    from broker_commission_update_bak
  </select>
  <select id="selectByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from broker_commission_update_bak
    <where>
      <if test="userId != null">
        user_id = #{userId}
      </if>
    </where>
    <if test="start != null and offset != null">
      limit #{start},#{offset}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from broker_commission_update_bak
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.binance.account.data.entity.broker.BrokerCommissionUpdateBak">
    insert into broker_commission_update_bak (id, user_id, trading_account, 
      maker_commiss, taker_commiss, symbol, 
      source, insert_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{tradingAccount,jdbcType=BIGINT}, 
      #{makerCommiss,jdbcType=DECIMAL}, #{takerCommiss,jdbcType=DECIMAL}, #{symbol,jdbcType=VARCHAR}, 
      #{source,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.binance.account.data.entity.broker.BrokerCommissionUpdateBak">
    insert into broker_commission_update_bak
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tradingAccount != null">
        trading_account,
      </if>
      <if test="makerCommiss != null">
        maker_commiss,
      </if>
      <if test="takerCommiss != null">
        taker_commiss,
      </if>
      <if test="symbol != null">
        symbol,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="tradingAccount != null">
        #{tradingAccount,jdbcType=BIGINT},
      </if>
      <if test="makerCommiss != null">
        #{makerCommiss,jdbcType=DECIMAL},
      </if>
      <if test="takerCommiss != null">
        #{takerCommiss,jdbcType=DECIMAL},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.binance.account.data.entity.broker.BrokerCommissionUpdateBak">
    update broker_commission_update_bak
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="tradingAccount != null">
        trading_account = #{tradingAccount,jdbcType=BIGINT},
      </if>
      <if test="makerCommiss != null">
        maker_commiss = #{makerCommiss,jdbcType=DECIMAL},
      </if>
      <if test="takerCommiss != null">
        taker_commiss = #{takerCommiss,jdbcType=DECIMAL},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binance.account.data.entity.broker.BrokerCommissionUpdateBak">
    update broker_commission_update_bak
    set user_id = #{userId,jdbcType=BIGINT},
      trading_account = #{tradingAccount,jdbcType=BIGINT},
      maker_commiss = #{makerCommiss,jdbcType=DECIMAL},
      taker_commiss = #{takerCommiss,jdbcType=DECIMAL},
      symbol = #{symbol,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>