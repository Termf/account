<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.binance.account.data.mapper.tag.TagInfoMapper">
    <resultMap id="BaseResultMap" type="com.binance.account.data.entity.tag.TagInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="min" property="min" jdbcType="DECIMAL"/>
        <result column="max" property="max" jdbcType="DECIMAL"/>
        <result column="value" property="value" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
		id, pid, category_id, `name`, `min`, `max`, `value`, create_time, update_time
  	</sql>

    <insert id="insert" parameterType="com.binance.account.data.entity.tag.TagInfo" keyProperty="id"
            useGeneratedKeys="true">
        insert into tag_info(pid, category_id, name, `min`, `max`, `value`)
        values (#{pid}, #{categoryId}, #{name}, #{min}, #{max}, #{value})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from tag_info where id = #{id}
    </delete>

    <update id="updateByPrimaryKey" parameterType="com.binance.account.data.entity.tag.TagCategory">
        update tag_info set
            pid = #{pid},
            category_id = #{categoryId},
            `name` = #{name},
            `min` = #{min},
            `max` = #{max},
            `value` = #{value}
        where id=#{id}
    </update>

    <select id="selectSimpleByCategoryId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag_info where category_id=#{categoryId}
    </select>

    <select id="selectByCategoryId" parameterType="java.util.Map"
            resultType="com.binance.account.data.entity.tag.TagInfo">
        select
            s.id,
            s.pid,
            s.category_id as categoryId,
            s.name,
            s.min,
            s.max,
            s.value,
            s.create_time as createTime,
            s.update_time as updateTime,
            p.name as pName,
            c.name as categoryName
        from tag_info s
        left join tag_info p on s.pid=p.id
        left join tag_category c on s.category_id=c.id
        where s.category_id=#{categoryId}
        limit #{position}, #{size}
    </select>

    <select id="countByCategoryId" parameterType="java.lang.String" resultType="java.lang.Long">
        select count(1) from tag_info where category_id=#{categoryId}
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag_info where id=#{id}
    </select>

    <select id="selectFullById" parameterType="java.lang.String"
            resultType="com.binance.account.data.entity.tag.FullTagInfo">
        select
            s.id,
            s.pid,
            s.category_id as categoryId,
            s.name,
            s.min,
            s.max,
            s.value,
            s.create_time as createTime,
            s.update_time as updateTime,
            p.name as pName,
            p.category_id as pCategoryId,
            c.name as categoryName
        from tag_info s
        left join tag_info p on s.pid=p.id
        left join tag_category c on s.category_id=c.id
        where s.id=#{id}
    </select>

    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag_info where name=#{name}
    </select>

    <select id="selectByCategoryNameAndPTagName" parameterType="java.util.Map"
            resultType="com.binance.account.data.entity.tag.TagInfo">
        select
            i.id,
            i.pid,
            i.category_id as categoryId,
            i.name,
            i.min,
            i.max,
            i.value,
            i.create_time as createTime,
            i.update_time as updateTime
        from tag_info i join tag_category c on i.category_id=c.id
		where i.name=#{pTagName} and c.name=#{categoryName}
    </select>

    <select id="selectByPid" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tag_info
        where
        <if test="pid==null">
            pid is null
        </if>
        <if test="pid!=null">
            pid=#{pid}
        </if>
    </select>
</mapper>