<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.account.data.mapper.agent.UserAgentConfigMapper">
  <resultMap id="BaseResultMap" type="com.binance.account.data.entity.agent.UserAgentConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="max_link" jdbcType="INTEGER" property="maxLink" />
    <result column="max_agent_rate" jdbcType="DECIMAL" property="maxAgentRate" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, max_link, max_agent_rate, insert_time, update_time, is_delete, create_user, 
    update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_agent_config
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_agent_config
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selectByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_agent_config
    <where>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT}
      </if>
    </where>
    <if test="start != null and offset != null">
      limit #{start},#{offset}
    </if>
  </select>

  <select id="countByUserId" parameterType="java.util.Map" resultType="java.lang.Integer">
    select
    count(1)
    from user_agent_config
    <where>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_agent_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.binance.account.data.entity.agent.UserAgentConfig">
    insert into user_agent_config (id, user_id, max_link, 
      max_agent_rate, insert_time, update_time, 
      is_delete, create_user, update_user
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{maxLink,jdbcType=INTEGER}, 
      #{maxAgentRate,jdbcType=DECIMAL}, #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.binance.account.data.entity.agent.UserAgentConfig">
    insert into user_agent_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="maxLink != null">
        max_link,
      </if>
      <if test="maxAgentRate != null">
        max_agent_rate,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="maxLink != null">
        #{maxLink,jdbcType=INTEGER},
      </if>
      <if test="maxAgentRate != null">
        #{maxAgentRate,jdbcType=DECIMAL},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByUserId" parameterType="com.binance.account.data.entity.agent.UserAgentConfig">
    update user_agent_config
    <set>
      <if test="maxLink != null">
        max_link = #{maxLink,jdbcType=INTEGER},
      </if>
      <if test="maxAgentRate != null">
        max_agent_rate = #{maxAgentRate,jdbcType=DECIMAL},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.binance.account.data.entity.agent.UserAgentConfig">
    update user_agent_config
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="maxLink != null">
        max_link = #{maxLink,jdbcType=INTEGER},
      </if>
      <if test="maxAgentRate != null">
        max_agent_rate = #{maxAgentRate,jdbcType=DECIMAL},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binance.account.data.entity.agent.UserAgentConfig">
    update user_agent_config
    set user_id = #{userId,jdbcType=BIGINT},
      max_link = #{maxLink,jdbcType=INTEGER},
      max_agent_rate = #{maxAgentRate,jdbcType=DECIMAL},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>