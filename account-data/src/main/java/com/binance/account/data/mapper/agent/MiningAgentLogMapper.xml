<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.account.data.mapper.agent.MiningAgentLogMapper">
  <resultMap id="BaseResultMap" type="com.binance.account.data.entity.agent.MiningAgentLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="agent_code" jdbcType="VARCHAR" property="agentCode" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="referral_user" jdbcType="BIGINT" property="referralUser" />
    <result column="referral_email" jdbcType="VARCHAR" property="referralEmail" />
    <result column="client" jdbcType="VARCHAR" property="client" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, agent_code, user_id, referral_user, referral_email, client, insert_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mining_agent_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mining_agent_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.binance.account.data.entity.agent.MiningAgentLog">
    insert into mining_agent_log (id, agent_code, user_id, 
      referral_user, referral_email, client, 
      insert_time)
    values (#{id,jdbcType=BIGINT}, #{agentCode,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{referralUser,jdbcType=BIGINT}, #{referralEmail,jdbcType=VARCHAR}, #{client,jdbcType=VARCHAR}, 
      #{insertTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.binance.account.data.entity.agent.MiningAgentLog">
    insert into mining_agent_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agentCode != null">
        agent_code,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="referralUser != null">
        referral_user,
      </if>
      <if test="referralEmail != null">
        referral_email,
      </if>
      <if test="client != null">
        client,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="agentCode != null">
        #{agentCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="referralUser != null">
        #{referralUser,jdbcType=BIGINT},
      </if>
      <if test="referralEmail != null">
        #{referralEmail,jdbcType=VARCHAR},
      </if>
      <if test="client != null">
        #{client,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.binance.account.data.entity.agent.MiningAgentLog">
    update mining_agent_log
    <set>
      <if test="agentCode != null">
        agent_code = #{agentCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="referralUser != null">
        referral_user = #{referralUser,jdbcType=BIGINT},
      </if>
      <if test="referralEmail != null">
        referral_email = #{referralEmail,jdbcType=VARCHAR},
      </if>
      <if test="client != null">
        client = #{client,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binance.account.data.entity.agent.MiningAgentLog">
    update mining_agent_log
    set agent_code = #{agentCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      referral_user = #{referralUser,jdbcType=BIGINT},
      referral_email = #{referralEmail,jdbcType=VARCHAR},
      client = #{client,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByUserIdAgentCode" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mining_agent_log
    <where>
    <if test="userId != null">
      user_id = #{userId}
    </if>
    <if test="agentCode != null">
      and agent_code = #{agentCode,jdbcType=VARCHAR}
    </if>
    <if test="startTime != null">
      and insert_time >= #{startTime}
    </if>
    <if test="endTime != null">
      and insert_time &lt;= #{endTime}
    </if>
    <if test="start != null and offset != null">
      LIMIT #{start},#{offset}
    </if>
    </where>
  </select>

  <select id="countByUserIdAgentCode" parameterType="java.util.Map" resultType="java.lang.Long">
    select
    count(1)
    from mining_agent_log
    <where>
    <if test="userId != null">
      user_id = #{userId}
    </if>
    <if test="agentCode != null">
      and agent_code = #{agentCode,jdbcType=VARCHAR}
    </if>
    <if test="startTime != null">
      and insert_time >= #{startTime}
    </if>
    <if test="endTime != null">
      and insert_time &lt;= #{endTime}
    </if>
    </where>
  </select>

</mapper>