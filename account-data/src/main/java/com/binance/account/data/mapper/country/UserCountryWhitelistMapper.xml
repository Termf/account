<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.account.data.mapper.country.UserCountryWhitelistMapper">
  <resultMap id="BaseResultMap" type="com.binance.account.data.entity.country.UserCountryWhitelist">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, memo, create_time, expire_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_country_whitelist
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectWhiteList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_country_whitelist
    <if test="userId != null">
      where user_id = #{userId,jdbcType=BIGINT}
        and (expire_time is null or expire_time > NOW())
    </if>
    order by create_time desc
  </select>
  <select id="isInWhiteList" parameterType="java.lang.Long" resultType="java.lang.Boolean">
    select count(1) from user_country_whitelist
    where user_id = #{userId,jdbcType=BIGINT}
      and (expire_time is null or expire_time > NOW())
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_country_whitelist
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.binance.account.data.entity.country.UserCountryWhitelist">
    insert into user_country_whitelist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <insert id="insertOrUpdate" parameterType="com.binance.account.data.entity.country.UserCountryWhitelist">
    insert into user_country_whitelist(user_id,memo,expire_time)
    values
    (#{userId,jdbcType=BIGINT}, #{memo,jdbcType=VARCHAR}, #{expireTime,jdbcType=TIMESTAMP})
   on duplicate key update memo = VALUES(memo), expire_time = VALUES(expire_time)
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.binance.account.data.entity.country.UserCountryWhitelist">
    update user_country_whitelist
    <set>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>