<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.account.data.mapper.agent.UserAgentRateMapper">
  <resultMap id="BaseResultMap" type="com.binance.account.data.entity.agent.UserAgentRate">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="agent_code" jdbcType="VARCHAR" property="agentCode" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="agent_level" jdbcType="INTEGER" property="agentLevel" />
    <result column="referral_rate" jdbcType="DECIMAL" property="referralRate" />
    <result column="select_share" jdbcType="INTEGER" property="selectShare" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="agent_channel" jdbcType="INTEGER" property="agentChannel" />
  </resultMap>
  <sql id="Base_Column_List">
    id, agent_code, label, user_id, agent_level, referral_rate,select_share, is_delete,agent_channel
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_agent_rate
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectCheckedShareCodeByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_agent_rate
    where user_id = #{userId,jdbcType=BIGINT} and select_share = 1
    limit 1
  </select>

  <select id="selectByAgentCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_agent_rate
    where agent_code = #{agentCode,jdbcType=VARCHAR}
  </select>

  <select id="selectByUserIdAgentCode" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_agent_rate
    <where>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="agentCode != null">
        and agent_code = #{agentCode,jdbcType=BIGINT}
      </if>
      <if test="agentChannel != null">
        and agent_channel = #{agentChannel}
      </if>
      and is_delete = 0
    </where>
    order by id desc
    <if test="start != null and offset != null">
      limit #{start},#{offset}
    </if>
  </select>

  <select id="countByUserIdAgentCode" parameterType="java.util.Map" resultType="java.lang.Integer">
    select
    count(1)
    from user_agent_rate
    <where>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="agentCode != null">
        and agent_code = #{agentCode,jdbcType=BIGINT}
      </if>
      and is_delete = 0
    </where>
  </select>

  <select id="countByUserId" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select
    count(1)
    from user_agent_rate
    where user_id = #{userId,jdbcType=BIGINT} and is_delete = 0 and agent_channel = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_agent_rate
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.binance.account.data.entity.agent.UserAgentRate">
    insert into user_agent_rate (id, agent_code, label,user_id, agent_level,
      referral_rate, is_delete
      )
    values (#{id,jdbcType=BIGINT}, #{agentCode,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{agentLevel,jdbcType=INTEGER},
      #{referralRate,jdbcType=DECIMAL}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.binance.account.data.entity.agent.UserAgentRate" useGeneratedKeys="true">
    insert into user_agent_rate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agentCode != null">
        agent_code,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="userId != null">
        user_id,
      </if>

      <if test="agentLevel != null">
        agent_level,
      </if>
      <if test="referralRate != null">
        referral_rate,
      </if>
      <if test="selectShare != null">
        select_share,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="agentChannel != null">
        agent_channel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="agentCode != null">
        #{agentCode,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="agentLevel != null">
        #{agentLevel,jdbcType=INTEGER},
      </if>
      <if test="referralRate != null">
        #{referralRate,jdbcType=DECIMAL},
      </if>
      <if test="selectShare != null">
        #{selectShare,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="agentChannel != null">
        #{agentChannel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.binance.account.data.entity.agent.UserAgentRate">
    update user_agent_rate
    <set>
      <if test="agentCode != null">
        agent_code = #{agentCode,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="agentLevel != null">
        agent_level = #{agentLevel,jdbcType=INTEGER},
      </if>
      <if test="referralRate != null">
        referral_rate = #{referralRate,jdbcType=DECIMAL},
      </if>
      <if test="selectShare != null">
        select_share = #{selectShare,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="agentChannel != null">
        agent_channel = #{agentChannel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binance.account.data.entity.agent.UserAgentRate">
    update user_agent_rate
    set user_id = #{userId,jdbcType=BIGINT},
      agent_code = #{agentCode,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      agent_level = #{agentLevel,jdbcType=INTEGER},
      referral_rate = #{referralRate,jdbcType=DECIMAL},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateAgentLabel" parameterType="java.util.Map">
    update user_agent_rate
    set label = #{label,jdbcType=VARCHAR}
    where  agent_code = #{agentCode,jdbcType=VARCHAR}
  </update>

  <update id="deleteAllShareCodeByUserId" parameterType="java.util.Map">
    update user_agent_rate
    set select_share = 0
    where  user_id = #{userId,jdbcType=BIGINT}
  </update>

  <update id="updateOneAsAgentCode" parameterType="java.util.Map">
    update user_agent_rate
    set select_share = 1
    where  agent_code = #{agentCode,jdbcType=VARCHAR}
  </update>
</mapper>